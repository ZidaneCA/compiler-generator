/* This file was generated by SableCC (http://www.sablecc.org/). */

package Calculator.analysis;

import java.util.*;
import Calculator.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFactorExpr(AFactorExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusExpr(APlusExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinusExpr(AMinusExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermFactor(ATermFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultFactor(AMultFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivFactor(ADivFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAModFactor(AModFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumberTerm(ANumberTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAVarTerm(AVarTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFuncTerm(AFuncTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprTerm(AExprTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASqrtFunc(ASqrtFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACbrtFunc(ACbrtFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASinFunc(ASinFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATanFunc(ATanFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASinhFunc(ASinhFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATanhFunc(ATanhFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAsinFunc(AAsinFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAtanFunc(AAtanFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALogFunc(ALogFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALnFunc(ALnFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExpFunc(AExpFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACosFunc(ACosFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAcosFunc(AAcosFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACoshFunc(ACoshFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPowerFunc(APowerFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAffectFunc(AAffectFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFactFunc(AFactFunc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEqual(TEqual node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVar(TVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSqrt(TSqrt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCos(TCos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSin(TSin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTan(TTan node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTExp(TExp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLog(TLog node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPower(TPower node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLn(TLn node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAcos(TAcos node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAsin(TAsin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAtan(TAtan node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCosh(TCosh node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSinh(TSinh node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTanh(TTanh node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFact(TFact node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTCbrt(TCbrt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAffect(TAffect node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
